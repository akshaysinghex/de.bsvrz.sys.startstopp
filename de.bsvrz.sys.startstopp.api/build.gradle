buildscript {

  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath 'org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:0.4.37'
  }
}



apply plugin: 'java'
apply plugin: 'jsonschema2pojo'

compileJava.options.encoding = 'UTF-8'

jsonSchema2Pojo {
  generateBuilders = true
  usePrimitives = false
  source = files("${sourceSets.main.output.resourcesDir}/json")
  targetDirectory = file("${project.buildDir}/generated-sources/js2p")
  targetPackage = 'de.bsvrz.sys.startstopp.api.jsonschema'
  propertyWordDelimiters = [] as char[]
  useLongIntegers = false
  useBigIntegers = false
  useDoubleNumbers = true
  useBigDecimals = false
  includeHashcodeAndEquals = true
  annotationStyle = 'jackson'
  customAnnotator = 'org.jsonschema2pojo.NoopAnnotator'
  includeJsr303Annotations = false
  sourceType = 'jsonschema'
  removeOldOutput = false
  outputEncoding = 'UTF-8'
  useJodaDates = false
  formatDateTimes = true
  formatDates = true
  formatTimes = true
  useCommonsLang3 = false
  initializeCollections = true
  classNamePrefix = ""
  classNameSuffix = ""
  fileExtensions = [] as String[]
  includeConstructors = true
   parcelable = false
  serializable = true
  includeAccessors = true
  dateType = "java.time.LocalDate"
  dateTimeType = "java.time.LocalDateTime"
}

repositories {
    mavenCentral() 
    maven {
        url 'http://dl.bintray.com/bitctrl/maven'
    }
}


configurations {
    provided
    compile.extendsFrom provided
}

dependencies {
	compileOnly "de.bsvrz.dav:de.bsvrz.dav.daf:${kernsoftware_version}"
	compile "com.nimbusds:srp6a:2.0.0"
    compile "commons-lang:commons-lang:2.6"
    compile "org.glassfish.jersey.core:jersey-common:${jersey_version}"
    compile "org.glassfish.jersey.ext:jersey-entity-filtering:${jersey_version}"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jersey_version}"
    compile "org.glassfish.jersey.containers:jersey-container-jetty-http:${jersey_version}"
    compile "org.glassfish.jersey.inject:jersey-hk2:${jersey_version}"
    compile "com.fasterxml.jackson.core:jackson-core:${jackson_version}"
    compile "com.fasterxml.jackson.core:jackson-annotations:${jackson_version}"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jackson_version}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jackson_version}"
    testCompile "junit:junit:4.12"
}

ext {
	depsDir = buildDir.path + '/classes/java/main/lib'
}

task copyDependencies(type: Copy) {
   from configurations.compile
   into depsDir
}

jar{
	dependsOn copyDependencies
}


